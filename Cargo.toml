# ðŸ“Œ File: Cargo.toml
# ðŸ”„ SOSTITUIRE il contenuto esistente con questo

[package]
name = "mini-db-server"
version = "0.3.0"
edition = "2021"
description = "Modular gaming database server with WASM external modules and real-time sync"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"

[dependencies]
# Core database
sled = "0.34"                  # Persistent key-value storage engine
sqlparser = "0.41.0"           # SQL parser for query analysis

# Async runtime and WebSocket
tokio = { version = "1", features = ["full"] } # Async runtime
tokio-tungstenite = { version = "0.20", optional = true }     # WebSocket for real-time sync
futures-util = { version = "0.3", optional = true }           # Async utilities
url = { version = "2.3", optional = true }                    # URL parsing

# HTTP server
warp = { version = "0.3", optional = true }                   # HTTP server framework
tower = { version = "0.4", optional = true }                  # HTTP middleware
tower-http = { version = "0.4", features = ["cors"], optional = true } # HTTP utilities

# Serialization and data
serde = { version = "1", features = ["derive"] } # JSON serialization
serde_json = "1.0"             # JSON parsing
toml = "0.8"                   # TOML configuration parsing
uuid = { version = "1.3", features = ["v4", "serde"] } # UUID generation
bincode = "1.3"                # Binary serialization for WASM memory interface

# Concurrency and collections
dashmap = "5.4.0"              # Concurrent HashMap
lru = "0.12.0"                 # LRU cache implementation
once_cell = "1.18"             # Lazy static initialization

# Optional client utilities (if needed)
colored = { version = "2.0", optional = true }    # Colored terminal output

# Date/time (REQUIRED for modules)
chrono = { version = "0.4", features = ["serde"] } # Date and time handling

# WASM support (always enabled for modular gaming)
wasmtime = "30.0.2"                                           # WASM runtime
wasmtime-wasi = "30.0.2"                                      # WASM WASI support

# Error handling e utilities
anyhow = "1.0"                                                 # Error handling

# Security dependencies
bcrypt = "0.15"              # Per password hashing
jsonwebtoken = "9.2"         # Per JWT tokens (opzionale)
rand = "0.8"

# Error handling and logging
thiserror = "1.0"              # Error handling macros
log = "0.4"                    # Logging framework
env_logger = "0.10"            # Environment-based logger

# Testing
lazy_static = "1.4"            # Static initialization for tests
serial_test = "0.5"            # Serial test execution

[dev-dependencies]
tempfile = "3.3.0"             # Temporary files for testing
mini-db-server = { path = "." } # Self-reference for integration tests

[features]
default = ["websocket", "webserver", "wasm"]
websocket = ["dep:tokio-tungstenite", "dep:futures-util", "dep:url"]
webserver = ["dep:warp", "dep:tower", "dep:tower-http"]
wasm = []

[profile.dev]
opt-level = 0
debug = true

[profile.release]
opt-level = 3
lto = true
codegen-units = 1

[profile.test]
opt-level = 1

[[bin]]
name = "server"
path = "src/main.rs"